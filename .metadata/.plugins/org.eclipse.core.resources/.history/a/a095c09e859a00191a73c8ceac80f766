import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.nio.channels.Selector;
import java.nio.charset.Charset;


public class EventManager implements Runnable {
	public EventManager(){
		
	}
	public void run(){
		try{
			
			Selector selector = Selector.open();
			ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();
			serverSocketChannel.configureBlocking(true);//블로킹방식
			serverSocketChannel.bind(new InetSocketAddress(10001));
			serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT);
			
			System.out.println("Server Start");
			
			while(true){
				SocketChannel socketChannel = serverSocketChannel.accept();
				InetSocketAddress inetSocketAddress = (InetSocketAddress) socketChannel.getRemoteAddress();
				System.out.println("Connected: " + inetSocketAddress.getHostName());
				
				Charset charset = Charset.forName("UTF-8");
				
				//클라이언트로부터 글자 받기
				ByteBuffer byteBuffer = ByteBuffer.allocate(100);
				socketChannel.read(byteBuffer);
				byteBuffer.flip();
				System.out.println("Received Data: " + charset.decode(byteBuffer).toString());
				
				byteBuffer = charset.encode("Hello CLient");
				socketChannel.write(byteBuffer);
				
				System.out.println("Sending Success");
			}catch(Exception e){
				e.printStackTrace();
			}
		}
	}
	
}
